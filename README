= OutputCatcher

by Matthias Hennemeyer <mhennemeyer@gmail.com>

== UNMAINTAINED

Please use a simple function like [this](https://stackoverflow.com/a/22777806/293280):

```ruby
def with_captured_stdout
  original_stdout = $stdout  # capture previous value of $stdout
  $stdout = StringIO.new     # assign a string buffer to $stdout
  yield                      # perform the body of the user code
  $stdout.string             # return the contents of the string buffer
ensure
  $stdout = original_stdout  # restore $stdout to its previous value
end
```

And call it with: 

```ruby
str = with_captured_stdout { puts "hi"; puts "bye"}
```

== Introduction

OutputCatcher is available as a Rails plugin and as a gem.
It provides a way to capture the standard out($stdout) or standard error($stderr) of your code without pain 
and suppresses the output of the 'err' or 'out' stream.


== Usage

  OutputCatcher knows only two methods: .catch_err and .catch_out
  
  To capture the stderr of your code:
  
  err = OutputCatcher.catch_err do
    $stderr << "error error"
  end
  err #=> "error error"
  
  
  To capture the stdout of your code:
  
  out = OutputCatcher.catch_out do
    puts "Hello Hello"
  end
  out #=> "Hello Hello"
  
== INSTALL:
Rails:
  
  $ ruby script/plugin install git://github.com/mhennemeyer/output_catcher.git

Gem:

  $ gem install mhennemeyer-output_catcher
  

Copyright (c) 2008 Matthias Hennemeyer, released under the MIT license
